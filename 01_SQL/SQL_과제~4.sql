--1 계열 정보를 저장할 카테고리 테이블을 만들려고 한다. 다음과 같은 테이블을 작성하시오.
CREATE TABLE TB_CATEGORY(
 NAME VARCHAR2(10),
 USE_YN CHAR(1) DEFAULT 'Y'
);
--2 과목 구분을 저장할 테이블
CREATE TABLE TB_CLASS_TYPE(
 NO VARCHAR2(5) PRIMARY KEY,
 NAME VARCHAR2(10)
);
--3 TB_CATEGORY 테이블의 NAME컬럼에 프라이머리 키를 생성하시오.
ALTER TABLE TB_CATEGORY ADD CONSTRAINT TB_CATEGORY_NAME_PK PRIMARY KEY(NAME);
--4 TB_CLASS_TYPE 테이블의 NAME 컬럼에 NULL값이 들어가지 않도록 속성을 변경하시오.
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;
--5 두 테이블에서 컬럼 명이 NO인 것은 기존 타입을 유지하면서 크기는 10, 컬럼명이 NAME인 것은 마찬가지로 기존 타입 유
--지=하고 크기 20으로 변경
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10) MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CATEGORY MODIFY NAME VARCHAR2(20);
--6 두 테이블의 NO 컬럼과 NAME 컬럼의 이름을 각 각 TB_를 제외한 테이블 이름이 앞에 붙은 형태로 변경
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAMEK;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NAME TO CLASS_TYPE_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;
--7 
ALTER TABLE TB_CATEGORY RENAME COLUMN CATEGORY_NAMEK TO PK_CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN CLASS_TYPE_NO TO PK_CLASS_TYPE_NO;

--8
INSERT INTO TB_CATEGORY VALUES('공학','Y');
INSERT INTO TB_CATEGORY VALUES('자연과학','Y');
INSERT INTO TB_CATEGORY VALUES('의학','Y');
INSERT INTO TB_CATEGORY VALUES('예체능','Y');
INSERT INTO TB_CATEGORY VALUES('인문사회','Y');
COMMIT;
--9
ALTER TABLE TB_DEPARTMENT ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY(CATEGORY)REFERENCES TB_CATEGORY(PK_CATEGORY_NAME);             
--10
CREATE OR REPLACE VIEW VW_학생일반정보(학번, 학생이름, 주소)
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
   FROM TB_STUDENT;

SELECT * FROM VW_학생일반정보;
--11.
CREATE OR REPLACE VIEW VW_지도면담(학생이름, 학과이름, 지도교수이름)
AS SELECT STUDENT_NAME, DEPARTMENT_NAME, NVL(PROFESSOR_NAME, '지도교수 없음')
 FROM TB_STUDENT
 JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
 JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
ORDER BY 2;
--12.
CREATE OR REPLACE VIEW VW_학과별학생수(DEPARTMENT_NAME, STUDENT_COUNT)
AS SELECT DEPARTMENT_NAME,COUNT(*)
 FROM TB_DEPARTMENT
 JOIN TB_STUDENT USING(DEPARTMENT_NO)
 GROUP BY DEPARTMENT_NAME;
COMMIT;
--13
SELECT *FROM VW_학생일반정보
WHERE 학번 = 'A213046';
UPDATE VW_학생일반정보
SET 학생이름 = '박신우'
WHERE 학번 = 'A213046';

-- 14)
CREATE OR REPLACE VIEW VW_학생일반정보(학번, 학생이름, 주소)
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
   FROM TB_STUDENT
   WITH READ ONLY;
--15
SELECT 과목번호, 과목이름, "누적수강생" 
FROM(SELECT CLASS_NO 과목번호 , CLASS_NAME 과목이름, COUNT(*) 누적수강생
FROM TB_GRADE
JOIN TB_CLASS USING(CLASS_NO)
WHERE TERM_NO LIKE'2009%'OR TERM_NO LIKE '2008%'OR TERM_NO LIKE '2007%'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY 3 DESC )
WHERE ROWNUM <= 3;

SELECT 과목번호, 과목이름, "누적수강생수(명)"
FROM (SELECT CLASS_NO 과목번호, CLASS_NAME 과목이름, COUNT(*) "누적수강생수(명)"
      FROM TB_GRADE
           JOIN TB_CLASS USING(CLASS_NO)
      WHERE TERM_NO LIKE '2009%'
            OR TERM_NO LIKE '2008%'
            OR TERM_NO LIKE '2007%'
      GROUP BY CLASS_NO, CLASS_NAME
      ORDER BY 3 DESC)
WHERE ROWNUM <= 3;

SELECT CLASS_NO 과목번호 , CLASS_NAME 과목이름
FROM TB_GRADE
JOIN TB_CLASS USING(CLASS_NO)
WHERE TERM_NO LIKE'2009%'OR TERM_NO LIKE '2008%'OR TERM_NO LIKE '2007%'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY 누적수강생 DESC